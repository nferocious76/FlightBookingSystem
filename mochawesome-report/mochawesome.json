{
  "stats": {
    "suites": 3,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-03T06:11:16.520Z",
    "end": "2020-05-03T06:11:16.981Z",
    "duration": 461,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cc9d77f8-ba20-4f30-9c8d-eb7d0417c86c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d5009fd-07ea-4fa0-abd4-e83649225da7",
          "title": "CARTS ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/cart.js",
          "file": "/test/cart.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "CARTS ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "e019cd38-b186-4465-828c-84c532f508c0",
              "parentUUID": "7d5009fd-07ea-4fa0-abd4-e83649225da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages?limit=1 -- get a package to be added to cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /packages?limit=1 -- get a package to be added to cart",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages?limit=1')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n           if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            const item = items[0];\n            pkgId = item.id;\n            done();\n        });",
              "err": {},
              "uuid": "b687ab6f-373d-40fc-b4ba-37e6aa7afb56",
              "parentUUID": "7d5009fd-07ea-4fa0-abd4-e83649225da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /cart -- add item to cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST POST /cart -- add item to cart",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/cart')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"package_id\": pkgId,\n            \"item_count\": 6\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "5fe7e19c-57a9-47cc-a4b8-d24b292340f2",
              "parentUUID": "7d5009fd-07ea-4fa0-abd4-e83649225da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /cart -- get cart items",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /cart -- get cart items",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/cart')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "e54735a0-4440-46e9-a612-97ed30a678b4",
              "parentUUID": "7d5009fd-07ea-4fa0-abd4-e83649225da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /cart?limit=5 -- get cart items with limit",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /cart?limit=5 -- get cart items with limit",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/cart?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "3c85354c-94e4-4c8a-a262-2781c5e5cba8",
              "parentUUID": "7d5009fd-07ea-4fa0-abd4-e83649225da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE /cart/:pkgId -- remove item from cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST DELETE /cart/:pkgId -- remove item from cart",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .delete(`/cart/${pkgId}`)\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('id');\n            const deletedId = data.id;\n            expect(deletedId).to.equal(pkgId);\n            done();\n        });",
              "err": {},
              "uuid": "cbd8c47b-3c5c-457a-b210-929467a241c0",
              "parentUUID": "7d5009fd-07ea-4fa0-abd4-e83649225da7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e019cd38-b186-4465-828c-84c532f508c0",
            "b687ab6f-373d-40fc-b4ba-37e6aa7afb56",
            "5fe7e19c-57a9-47cc-a4b8-d24b292340f2",
            "e54735a0-4440-46e9-a612-97ed30a678b4",
            "3c85354c-94e4-4c8a-a262-2781c5e5cba8",
            "cbd8c47b-3c5c-457a-b210-929467a241c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d208894e-1768-4075-9fe5-dd83ec16ad78",
          "title": "PACKGAGE ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/package.js",
          "file": "/test/package.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "5b3525cc-d018-4908-9e3f-8f215cc48a9d",
              "parentUUID": "d208894e-1768-4075-9fe5-dd83ec16ad78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /airlines?limit=1 -- get an airline to have a package",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /airlines?limit=1 -- get an airline to have a package",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/airlines?limit=1')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n           if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            const item = items[0];\n            airId = item.id;\n            done();\n        });",
              "err": {},
              "uuid": "30ed9f7b-733f-4c1c-88ab-84c1d8624a05",
              "parentUUID": "d208894e-1768-4075-9fe5-dd83ec16ad78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /packages -- create a package",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST POST /packages -- create a package",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let promoId = `${h.randChar(4)}`;\n        let rate = `${h.randNumber(5)}`;\n        api\n        .post('/packages')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"airline_id\": airId,\n            \"name\": `Winter Promo ${promoId}`,\n            \"rate\": rate,\n            \"from_address\": \"Manila\",\n            \"to_address\": \"Tokyo\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "d14b6685-d3f8-4f65-b177-9d9cb6287a67",
              "parentUUID": "d208894e-1768-4075-9fe5-dd83ec16ad78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages -- get packages",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /packages -- get packages",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "65934a4e-02b7-4ad3-9dba-856c3099faf3",
              "parentUUID": "d208894e-1768-4075-9fe5-dd83ec16ad78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages?limit=5 -- get packages with limit",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /packages?limit=5 -- get packages with limit",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "88d5bb7d-3ac7-4e34-8564-127f0e8a5f2b",
              "parentUUID": "d208894e-1768-4075-9fe5-dd83ec16ad78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b3525cc-d018-4908-9e3f-8f215cc48a9d",
            "30ed9f7b-733f-4c1c-88ab-84c1d8624a05",
            "d14b6685-d3f8-4f65-b177-9d9cb6287a67",
            "65934a4e-02b7-4ad3-9dba-856c3099faf3",
            "88d5bb7d-3ac7-4e34-8564-127f0e8a5f2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 101,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2a25d79a-8c5c-4c17-9011-8afc7a4520b6",
          "title": "USERS UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/user.js",
          "file": "/test/user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signup -- sign-up to create an account",
              "fullTitle": "USERS UNIT TEST POST /users/signup -- sign-up to create an account",
              "timedOut": false,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "email = `test.${h.randString(8)}@gmail.com`;\n        api\n        .post('/users/signup')\n        .set(headers)\n        .send({\n            \"role_id\": \"be72f6c2-8c47-11ea-b57f-acde48001122\",\n            \"email\": email,\n            \"password\": \"1234\",\n            \"first_name\": \"neil francis\",\n            \"last_name\": \"hipona\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('email');\n            done();\n        });",
              "err": {},
              "uuid": "c30bdce6-d43e-4e09-a13c-033336ddf61b",
              "parentUUID": "2a25d79a-8c5c-4c17-9011-8afc7a4520b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "USERS UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": email,\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "fd71ab20-8b88-47aa-add3-cef2ab3be284",
              "parentUUID": "2a25d79a-8c5c-4c17-9011-8afc7a4520b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users/signout -- logout and clear token",
              "fullTitle": "USERS UNIT TEST POST /users/signout -- logout and clear token",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signout')\n        .set(t(token))\n        .set(headers)\n        .send()\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "a0a2c834-41d6-4d61-b573-d6e5ae256a0f",
              "parentUUID": "2a25d79a-8c5c-4c17-9011-8afc7a4520b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c30bdce6-d43e-4e09-a13c-033336ddf61b",
            "fd71ab20-8b88-47aa-add3-cef2ab3be284",
            "a0a2c834-41d6-4d61-b573-d6e5ae256a0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.1.0"
    }
  }
}