{
  "stats": {
    "suites": 4,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-03T06:18:15.749Z",
    "end": "2020-05-03T06:18:16.282Z",
    "duration": 533,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c008022f-3c08-4eca-8f31-828243bc572e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "26125cc1-5d7f-4e03-8268-79f0d423e61e",
          "title": "PACKGAGE ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/airlines.js",
          "file": "/test/airlines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "9d4ab5c6-95ed-400f-945f-efe51989a381",
              "parentUUID": "26125cc1-5d7f-4e03-8268-79f0d423e61e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /airlines -- create an airline",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST POST /airlines -- create an airline",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let airCode = `${h.randChar(4)}`;\n        api\n        .post('/airlines')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"name\": `Airline ${airCode}`\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "56b98adc-2032-49fd-b580-df7ad39cf7be",
              "parentUUID": "26125cc1-5d7f-4e03-8268-79f0d423e61e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /airlines -- get list of airlines",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /airlines -- get list of airlines",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/airlines')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "bd14b611-109a-4c1b-bce4-06acdaf0a203",
              "parentUUID": "26125cc1-5d7f-4e03-8268-79f0d423e61e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /airlines?limit=5 -- get list of airlines with limit",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /airlines?limit=5 -- get list of airlines with limit",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/airlines?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "b82c3c3b-93d2-4f51-9d94-0922a52ac6f6",
              "parentUUID": "26125cc1-5d7f-4e03-8268-79f0d423e61e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d4ab5c6-95ed-400f-945f-efe51989a381",
            "56b98adc-2032-49fd-b580-df7ad39cf7be",
            "bd14b611-109a-4c1b-bce4-06acdaf0a203",
            "b82c3c3b-93d2-4f51-9d94-0922a52ac6f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ece97ec1-f359-408d-a738-e0a0ef7846ce",
          "title": "CARTS ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/cart.js",
          "file": "/test/cart.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "CARTS ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "ebc29a76-64fe-4b71-a573-d628bff5de19",
              "parentUUID": "ece97ec1-f359-408d-a738-e0a0ef7846ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages?limit=1 -- get a package to be added to cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /packages?limit=1 -- get a package to be added to cart",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages?limit=1')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n           if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            const item = items[0];\n            pkgId = item.id;\n            done();\n        });",
              "err": {},
              "uuid": "4496dd77-3625-4a4c-898c-527e26df30a6",
              "parentUUID": "ece97ec1-f359-408d-a738-e0a0ef7846ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /cart -- add item to cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST POST /cart -- add item to cart",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/cart')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"package_id\": pkgId,\n            \"item_count\": 6\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "879197b7-3485-4d30-a9a7-b99bcdb8e2c8",
              "parentUUID": "ece97ec1-f359-408d-a738-e0a0ef7846ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /cart -- get cart items",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /cart -- get cart items",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/cart')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "0142b53e-8494-4495-b6c1-d4e39b401e87",
              "parentUUID": "ece97ec1-f359-408d-a738-e0a0ef7846ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /cart?limit=5 -- get cart items with limit",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /cart?limit=5 -- get cart items with limit",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/cart?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "d87a1df6-586c-43da-a96f-98f220453e3a",
              "parentUUID": "ece97ec1-f359-408d-a738-e0a0ef7846ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE /cart/:pkgId -- remove item from cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST DELETE /cart/:pkgId -- remove item from cart",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .delete(`/cart/${pkgId}`)\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('id');\n            const deletedId = data.id;\n            expect(deletedId).to.equal(pkgId);\n            done();\n        });",
              "err": {},
              "uuid": "0de63f76-79b8-45cb-9b2a-6027df156ec4",
              "parentUUID": "ece97ec1-f359-408d-a738-e0a0ef7846ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ebc29a76-64fe-4b71-a573-d628bff5de19",
            "4496dd77-3625-4a4c-898c-527e26df30a6",
            "879197b7-3485-4d30-a9a7-b99bcdb8e2c8",
            "0142b53e-8494-4495-b6c1-d4e39b401e87",
            "d87a1df6-586c-43da-a96f-98f220453e3a",
            "0de63f76-79b8-45cb-9b2a-6027df156ec4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 101,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "10344642-5b24-44c8-a193-20d01d141d12",
          "title": "PACKGAGE ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/package.js",
          "file": "/test/package.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "f77862b1-003b-4b94-aeda-928918501d68",
              "parentUUID": "10344642-5b24-44c8-a193-20d01d141d12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /airlines?limit=1 -- get an airline to have a package",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /airlines?limit=1 -- get an airline to have a package",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/airlines?limit=1')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n           if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            const item = items[0];\n            airId = item.id;\n            done();\n        });",
              "err": {},
              "uuid": "0fae2cf6-65d7-4650-aae5-c04b634c1f7d",
              "parentUUID": "10344642-5b24-44c8-a193-20d01d141d12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /packages -- create a package",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST POST /packages -- create a package",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let promoId = `${h.randChar(4)}`;\n        let rate = `${h.randNumber(5)}`;\n        api\n        .post('/packages')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"airline_id\": airId,\n            \"name\": `Winter Promo ${promoId}`,\n            \"rate\": rate,\n            \"from_address\": \"Manila\",\n            \"to_address\": \"Tokyo\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "3e07b62d-7273-4c95-a392-6fe4a1ad5ade",
              "parentUUID": "10344642-5b24-44c8-a193-20d01d141d12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages -- get packages",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /packages -- get packages",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "e9834e6d-1e8d-43dc-a3b5-046e23b4ba0d",
              "parentUUID": "10344642-5b24-44c8-a193-20d01d141d12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages?limit=5 -- get packages with limit",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /packages?limit=5 -- get packages with limit",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "eb40efa4-ab8f-47bb-ab9a-e4c4d179d049",
              "parentUUID": "10344642-5b24-44c8-a193-20d01d141d12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f77862b1-003b-4b94-aeda-928918501d68",
            "0fae2cf6-65d7-4650-aae5-c04b634c1f7d",
            "3e07b62d-7273-4c95-a392-6fe4a1ad5ade",
            "e9834e6d-1e8d-43dc-a3b5-046e23b4ba0d",
            "eb40efa4-ab8f-47bb-ab9a-e4c4d179d049"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f6b122b1-b5f8-455f-8f0d-3f99a08b280c",
          "title": "USERS UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/user.js",
          "file": "/test/user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signup -- sign-up to create an account",
              "fullTitle": "USERS UNIT TEST POST /users/signup -- sign-up to create an account",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "email = `test.${h.randString(8)}@gmail.com`;\n        api\n        .post('/users/signup')\n        .set(headers)\n        .send({\n            \"role_id\": \"be72f6c2-8c47-11ea-b57f-acde48001122\",\n            \"email\": email,\n            \"password\": \"1234\",\n            \"first_name\": \"neil francis\",\n            \"last_name\": \"hipona\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('email');\n            done();\n        });",
              "err": {},
              "uuid": "759efb92-af1b-4758-a393-530919b3e89c",
              "parentUUID": "f6b122b1-b5f8-455f-8f0d-3f99a08b280c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "USERS UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": email,\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "43d1dc36-3e10-4a31-a57d-62bf51a58043",
              "parentUUID": "f6b122b1-b5f8-455f-8f0d-3f99a08b280c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users/signout -- logout and clear token",
              "fullTitle": "USERS UNIT TEST POST /users/signout -- logout and clear token",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signout')\n        .set(t(token))\n        .set(headers)\n        .send()\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "c526b251-bdcc-4300-97c1-9dcea233c3bb",
              "parentUUID": "f6b122b1-b5f8-455f-8f0d-3f99a08b280c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "759efb92-af1b-4758-a393-530919b3e89c",
            "43d1dc36-3e10-4a31-a57d-62bf51a58043",
            "c526b251-bdcc-4300-97c1-9dcea233c3bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.1.0"
    }
  }
}