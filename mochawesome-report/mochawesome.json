{
  "stats": {
    "suites": 5,
    "tests": 22,
    "passes": 22,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-03T07:01:28.354Z",
    "end": "2020-05-03T07:01:29.999Z",
    "duration": 1645,
    "testsRegistered": 22,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c2a693a9-b2b8-458c-904f-871ec9951c9f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d006e0a-b1ac-4551-a765-65f03f0441e0",
          "title": "AIRLINE ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/airlines.js",
          "file": "/test/airlines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "AIRLINE ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "cfdf48d1-8f91-4e1e-9451-010d31413554",
              "parentUUID": "4d006e0a-b1ac-4551-a765-65f03f0441e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /airlines -- create an airline",
              "fullTitle": "AIRLINE ENDPOINT UNIT TEST POST /airlines -- create an airline",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let airCode = `${h.randChar(4)}`;\n        api\n        .post('/airlines')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"name\": `Airline ${airCode}`\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "fa997d32-cc54-4f4b-a823-876177a557f8",
              "parentUUID": "4d006e0a-b1ac-4551-a765-65f03f0441e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /airlines -- get list of airlines",
              "fullTitle": "AIRLINE ENDPOINT UNIT TEST GET /airlines -- get list of airlines",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/airlines')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "a1721fd7-8b14-4901-be02-4bc487089672",
              "parentUUID": "4d006e0a-b1ac-4551-a765-65f03f0441e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /airlines?limit=5 -- get list of airlines with limit",
              "fullTitle": "AIRLINE ENDPOINT UNIT TEST GET /airlines?limit=5 -- get list of airlines with limit",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/airlines?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "ae12ae10-61b9-4885-b9e0-1652077ebcbc",
              "parentUUID": "4d006e0a-b1ac-4551-a765-65f03f0441e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cfdf48d1-8f91-4e1e-9451-010d31413554",
            "fa997d32-cc54-4f4b-a823-876177a557f8",
            "a1721fd7-8b14-4901-be02-4bc487089672",
            "ae12ae10-61b9-4885-b9e0-1652077ebcbc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 103,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f12a6fb4-f29c-4885-8b98-ee88dbef129c",
          "title": "CARTS ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/cart.js",
          "file": "/test/cart.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "CARTS ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "1dd9f4d1-17a4-49ce-833b-861674e65459",
              "parentUUID": "f12a6fb4-f29c-4885-8b98-ee88dbef129c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages?limit=1 -- get a package to be added to cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /packages?limit=1 -- get a package to be added to cart",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages?limit=1')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n           if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            const item = items[0];\n            pkgId = item.id;\n            done();\n        });",
              "err": {},
              "uuid": "d3f14933-5383-412b-965f-0cbb1790220f",
              "parentUUID": "f12a6fb4-f29c-4885-8b98-ee88dbef129c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /cart -- add item to cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST POST /cart -- add item to cart",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/cart')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"package_id\": pkgId,\n            \"item_count\": 6\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "88c366a5-bafd-4b6a-9655-a6d3dbfd0090",
              "parentUUID": "f12a6fb4-f29c-4885-8b98-ee88dbef129c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /cart -- get cart items",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /cart -- get cart items",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/cart')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "007654c4-9570-42e5-80aa-c150c9078780",
              "parentUUID": "f12a6fb4-f29c-4885-8b98-ee88dbef129c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /cart?limit=5 -- get cart items with limit",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /cart?limit=5 -- get cart items with limit",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/cart?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "af9b56e0-6cd4-4a97-a064-e6c336a1ef51",
              "parentUUID": "f12a6fb4-f29c-4885-8b98-ee88dbef129c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE /cart/:pkgId -- remove item from cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST DELETE /cart/:pkgId -- remove item from cart",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .delete(`/cart/${pkgId}`)\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('id');\n            const deletedId = data.id;\n            expect(deletedId).to.equal(pkgId);\n            done();\n        });",
              "err": {},
              "uuid": "7f7897b2-feb3-4b8e-8796-eb038ce0cb4b",
              "parentUUID": "f12a6fb4-f29c-4885-8b98-ee88dbef129c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1dd9f4d1-17a4-49ce-833b-861674e65459",
            "d3f14933-5383-412b-965f-0cbb1790220f",
            "88c366a5-bafd-4b6a-9655-a6d3dbfd0090",
            "007654c4-9570-42e5-80aa-c150c9078780",
            "af9b56e0-6cd4-4a97-a064-e6c336a1ef51",
            "7f7897b2-feb3-4b8e-8796-eb038ce0cb4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 92,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "31296548-5f55-4ea2-8a91-7a9be3d687e4",
          "title": "PACKGAGE ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/package.js",
          "file": "/test/package.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "74210bd7-b550-42bc-982b-72e0871ba370",
              "parentUUID": "31296548-5f55-4ea2-8a91-7a9be3d687e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /airlines?limit=1 -- get an airline to have a package",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /airlines?limit=1 -- get an airline to have a package",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/airlines?limit=1')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n           if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            const item = items[0];\n            airId = item.id;\n            done();\n        });",
              "err": {},
              "uuid": "3ccbea29-c972-4128-afbf-8e41cf81cfa7",
              "parentUUID": "31296548-5f55-4ea2-8a91-7a9be3d687e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /packages -- create a package",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST POST /packages -- create a package",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let promoId = `${h.randChar(4)}`;\n        let rate = `${h.randNumber(5)}`;\n        api\n        .post('/packages')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"airline_id\": airId,\n            \"name\": `Winter Promo ${promoId}`,\n            \"rate\": rate,\n            \"from_address\": \"Manila\",\n            \"to_address\": \"Tokyo\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "3eccf2fa-690e-491f-8472-f319319322f2",
              "parentUUID": "31296548-5f55-4ea2-8a91-7a9be3d687e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages -- get packages",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /packages -- get packages",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "04471c53-8dd7-46fa-99a6-45618ec3b0c4",
              "parentUUID": "31296548-5f55-4ea2-8a91-7a9be3d687e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages?limit=5 -- get packages with limit",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /packages?limit=5 -- get packages with limit",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "2a18ab66-e856-457f-b72b-2369d186586d",
              "parentUUID": "31296548-5f55-4ea2-8a91-7a9be3d687e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74210bd7-b550-42bc-982b-72e0871ba370",
            "3ccbea29-c972-4128-afbf-8e41cf81cfa7",
            "3eccf2fa-690e-491f-8472-f319319322f2",
            "04471c53-8dd7-46fa-99a6-45618ec3b0c4",
            "2a18ab66-e856-457f-b72b-2369d186586d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 90,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b7d05bc-ea25-4ac4-8f0f-17cb941f708a",
          "title": "PAYPAL ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/paypal.js",
          "file": "/test/paypal.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "PAYPAL ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "4a522624-5b3d-49f4-bf03-30ab475e91a9",
              "parentUUID": "2b7d05bc-ea25-4ac4-8f0f-17cb941f708a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages?limit=1 -- get a package to be added to cart",
              "fullTitle": "PAYPAL ENDPOINT UNIT TEST GET /packages?limit=1 -- get a package to be added to cart",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages?limit=1')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n           if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            const item = items[0];\n            pkgId = item.id;\n            done();\n        });",
              "err": {},
              "uuid": "5f4c3644-ba6f-413d-93e5-b27eb972140c",
              "parentUUID": "2b7d05bc-ea25-4ac4-8f0f-17cb941f708a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /cart -- add item to cart",
              "fullTitle": "PAYPAL ENDPOINT UNIT TEST POST /cart -- add item to cart",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/cart')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"package_id\": pkgId,\n            \"item_count\": 6\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "1e6ebda6-0d8a-4f4f-9f56-485f55dd184a",
              "parentUUID": "2b7d05bc-ea25-4ac4-8f0f-17cb941f708a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /paypal/pay -- paypal checkout",
              "fullTitle": "PAYPAL ENDPOINT UNIT TEST POST /paypal/pay -- paypal checkout",
              "timedOut": false,
              "duration": 1113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/paypal/pay')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"message\": \"Test pay\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) { // 302\n                res.header['location'].should.include('paypal');\n                return done();\n            }\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "c695ced4-4d44-4428-8949-e40a7dfb0f37",
              "parentUUID": "2b7d05bc-ea25-4ac4-8f0f-17cb941f708a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a522624-5b3d-49f4-bf03-30ab475e91a9",
            "5f4c3644-ba6f-413d-93e5-b27eb972140c",
            "1e6ebda6-0d8a-4f4f-9f56-485f55dd184a",
            "c695ced4-4d44-4428-8949-e40a7dfb0f37"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1194,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "94303f76-6c9a-46d0-bb7f-91237463dbe2",
          "title": "USERS ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/user.js",
          "file": "/test/user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signup -- sign-up to create an account",
              "fullTitle": "USERS ENDPOINT UNIT TEST POST /users/signup -- sign-up to create an account",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "email = `test.${h.randString(8)}@gmail.com`;\n        api\n        .post('/users/signup')\n        .set(headers)\n        .send({\n            \"role_id\": \"be72f6c2-8c47-11ea-b57f-acde48001122\",\n            \"email\": email,\n            \"password\": \"1234\",\n            \"first_name\": \"neil francis\",\n            \"last_name\": \"hipona\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('email');\n            done();\n        });",
              "err": {},
              "uuid": "235aa9aa-0b42-4935-8500-f951baea7a61",
              "parentUUID": "94303f76-6c9a-46d0-bb7f-91237463dbe2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "USERS ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": email,\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "cfeff19d-5dad-4448-a252-7c4f8666ef7b",
              "parentUUID": "94303f76-6c9a-46d0-bb7f-91237463dbe2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users/signout -- logout and clear token",
              "fullTitle": "USERS ENDPOINT UNIT TEST POST /users/signout -- logout and clear token",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signout')\n        .set(t(token))\n        .set(headers)\n        .send()\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "af1fd8fb-e4d1-4a84-9717-09158116517c",
              "parentUUID": "94303f76-6c9a-46d0-bb7f-91237463dbe2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "235aa9aa-0b42-4935-8500-f951baea7a61",
            "cfeff19d-5dad-4448-a252-7c4f8666ef7b",
            "af1fd8fb-e4d1-4a84-9717-09158116517c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 150,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.1.0"
    }
  }
}