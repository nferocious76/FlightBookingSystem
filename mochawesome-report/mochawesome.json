{
  "stats": {
    "suites": 5,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-03T06:49:30.710Z",
    "end": "2020-05-03T06:49:32.311Z",
    "duration": 1601,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "96252efa-e84c-4b39-9977-7ebc2312eb7c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c5396564-2e68-40fa-954c-0f4a75f524f4",
          "title": "AIRLINE ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/airlines.js",
          "file": "/test/airlines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "AIRLINE ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "92560ba6-5163-4d4d-9d48-8fa5b2123e2d",
              "parentUUID": "c5396564-2e68-40fa-954c-0f4a75f524f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /airlines -- create an airline",
              "fullTitle": "AIRLINE ENDPOINT UNIT TEST POST /airlines -- create an airline",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let airCode = `${h.randChar(4)}`;\n        api\n        .post('/airlines')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"name\": `Airline ${airCode}`\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "f2e5b57e-a9bd-4c64-939a-2c35d949efd2",
              "parentUUID": "c5396564-2e68-40fa-954c-0f4a75f524f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /airlines -- get list of airlines",
              "fullTitle": "AIRLINE ENDPOINT UNIT TEST GET /airlines -- get list of airlines",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/airlines')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "3c6cfa5e-6a07-4f78-936f-cfd049345260",
              "parentUUID": "c5396564-2e68-40fa-954c-0f4a75f524f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /airlines?limit=5 -- get list of airlines with limit",
              "fullTitle": "AIRLINE ENDPOINT UNIT TEST GET /airlines?limit=5 -- get list of airlines with limit",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/airlines?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "b9a963ca-4d3b-4eaa-a777-13d87ce5e868",
              "parentUUID": "c5396564-2e68-40fa-954c-0f4a75f524f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92560ba6-5163-4d4d-9d48-8fa5b2123e2d",
            "f2e5b57e-a9bd-4c64-939a-2c35d949efd2",
            "3c6cfa5e-6a07-4f78-936f-cfd049345260",
            "b9a963ca-4d3b-4eaa-a777-13d87ce5e868"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4671984f-fa14-4993-a146-8a9db68488e0",
          "title": "CARTS ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/cart.js",
          "file": "/test/cart.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "CARTS ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "6c1ca0b5-71fd-4572-88e1-fbb354b1251f",
              "parentUUID": "4671984f-fa14-4993-a146-8a9db68488e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages?limit=1 -- get a package to be added to cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /packages?limit=1 -- get a package to be added to cart",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages?limit=1')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n           if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            const item = items[0];\n            pkgId = item.id;\n            done();\n        });",
              "err": {},
              "uuid": "e8142126-2eed-4f74-b408-7dae110f1ca1",
              "parentUUID": "4671984f-fa14-4993-a146-8a9db68488e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /cart -- add item to cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST POST /cart -- add item to cart",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/cart')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"package_id\": pkgId,\n            \"item_count\": 6\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "246b7638-de64-4c74-9844-4de50ac92592",
              "parentUUID": "4671984f-fa14-4993-a146-8a9db68488e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /cart -- get cart items",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /cart -- get cart items",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/cart')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "66f8c4b6-c872-49f0-820c-18fcba67e8e1",
              "parentUUID": "4671984f-fa14-4993-a146-8a9db68488e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /cart?limit=5 -- get cart items with limit",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /cart?limit=5 -- get cart items with limit",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/cart?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "8b208e40-f026-47e5-b55a-020cc1d11421",
              "parentUUID": "4671984f-fa14-4993-a146-8a9db68488e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE /cart/:pkgId -- remove item from cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST DELETE /cart/:pkgId -- remove item from cart",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .delete(`/cart/${pkgId}`)\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('id');\n            const deletedId = data.id;\n            expect(deletedId).to.equal(pkgId);\n            done();\n        });",
              "err": {},
              "uuid": "ea8b796c-f4cd-4b76-95a0-9a1057c79b9d",
              "parentUUID": "4671984f-fa14-4993-a146-8a9db68488e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c1ca0b5-71fd-4572-88e1-fbb354b1251f",
            "e8142126-2eed-4f74-b408-7dae110f1ca1",
            "246b7638-de64-4c74-9844-4de50ac92592",
            "66f8c4b6-c872-49f0-820c-18fcba67e8e1",
            "8b208e40-f026-47e5-b55a-020cc1d11421",
            "ea8b796c-f4cd-4b76-95a0-9a1057c79b9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 93,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a9a3bbbd-2136-4e65-8084-66c8b298d393",
          "title": "PACKGAGE ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/package.js",
          "file": "/test/package.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "1943c4bb-a187-4467-a8f1-52bc2ae3510a",
              "parentUUID": "a9a3bbbd-2136-4e65-8084-66c8b298d393",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /airlines?limit=1 -- get an airline to have a package",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /airlines?limit=1 -- get an airline to have a package",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/airlines?limit=1')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n           if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            const item = items[0];\n            airId = item.id;\n            done();\n        });",
              "err": {},
              "uuid": "65180332-17e3-4733-a30e-72c3ff64bf0e",
              "parentUUID": "a9a3bbbd-2136-4e65-8084-66c8b298d393",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /packages -- create a package",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST POST /packages -- create a package",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let promoId = `${h.randChar(4)}`;\n        let rate = `${h.randNumber(5)}`;\n        api\n        .post('/packages')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"airline_id\": airId,\n            \"name\": `Winter Promo ${promoId}`,\n            \"rate\": rate,\n            \"from_address\": \"Manila\",\n            \"to_address\": \"Tokyo\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "c0b22c75-7ad2-4532-9554-15f50ed47fd7",
              "parentUUID": "a9a3bbbd-2136-4e65-8084-66c8b298d393",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages -- get packages",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /packages -- get packages",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "5ea70e4a-2858-4c21-b8b8-bc64e5f96c34",
              "parentUUID": "a9a3bbbd-2136-4e65-8084-66c8b298d393",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages?limit=5 -- get packages with limit",
              "fullTitle": "PACKGAGE ENDPOINT UNIT TEST GET /packages?limit=5 -- get packages with limit",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "077fdf58-0b3c-4492-8003-ba97a1f359f4",
              "parentUUID": "a9a3bbbd-2136-4e65-8084-66c8b298d393",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1943c4bb-a187-4467-a8f1-52bc2ae3510a",
            "65180332-17e3-4733-a30e-72c3ff64bf0e",
            "c0b22c75-7ad2-4532-9554-15f50ed47fd7",
            "5ea70e4a-2858-4c21-b8b8-bc64e5f96c34",
            "077fdf58-0b3c-4492-8003-ba97a1f359f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 88,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f67b9725-7055-4a70-929c-a18b1503c232",
          "title": "PAYPAL ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/paypal.js",
          "file": "/test/paypal.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "PAYPAL ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "a6d94168-cdbb-4176-bf4b-fc764239185e",
              "parentUUID": "f67b9725-7055-4a70-929c-a18b1503c232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /paypal/pay -- paypal checkout",
              "fullTitle": "PAYPAL ENDPOINT UNIT TEST POST /paypal/pay -- paypal checkout",
              "timedOut": false,
              "duration": 1082,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/paypal/pay')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"message\": \"Test pay\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            console.log('header: ', res.header)\n            console.log('err: ', err.code)\n            console.log('err cc: ', err.errorCode)\n            if (err) {\n                res.header['location'].should.include('paypal');\n                return done();\n            }\n            done(new Error('Should have 302'));\n        });",
              "err": {},
              "uuid": "dcbf7e94-e9bd-4346-bb4e-166ff3997b36",
              "parentUUID": "f67b9725-7055-4a70-929c-a18b1503c232",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6d94168-cdbb-4176-bf4b-fc764239185e",
            "dcbf7e94-e9bd-4346-bb4e-166ff3997b36"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06a0c6e3-a0d2-4366-8a7e-1a83844eb9cc",
          "title": "USERS ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/user.js",
          "file": "/test/user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signup -- sign-up to create an account",
              "fullTitle": "USERS ENDPOINT UNIT TEST POST /users/signup -- sign-up to create an account",
              "timedOut": false,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "email = `test.${h.randString(8)}@gmail.com`;\n        api\n        .post('/users/signup')\n        .set(headers)\n        .send({\n            \"role_id\": \"be72f6c2-8c47-11ea-b57f-acde48001122\",\n            \"email\": email,\n            \"password\": \"1234\",\n            \"first_name\": \"neil francis\",\n            \"last_name\": \"hipona\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('email');\n            done();\n        });",
              "err": {},
              "uuid": "486520bc-5609-45e7-9866-136c099bb2d9",
              "parentUUID": "06a0c6e3-a0d2-4366-8a7e-1a83844eb9cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "USERS ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": email,\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "08777fc6-8390-4061-82f2-2c0091fe9fb2",
              "parentUUID": "06a0c6e3-a0d2-4366-8a7e-1a83844eb9cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users/signout -- logout and clear token",
              "fullTitle": "USERS ENDPOINT UNIT TEST POST /users/signout -- logout and clear token",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signout')\n        .set(t(token))\n        .set(headers)\n        .send()\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "4d1f7222-65c2-43a7-8794-94dcef882a62",
              "parentUUID": "06a0c6e3-a0d2-4366-8a7e-1a83844eb9cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "486520bc-5609-45e7-9866-136c099bb2d9",
            "08777fc6-8390-4061-82f2-2c0091fe9fb2",
            "4d1f7222-65c2-43a7-8794-94dcef882a62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.1.0"
    }
  }
}