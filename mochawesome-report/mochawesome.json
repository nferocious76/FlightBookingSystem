{
  "stats": {
    "suites": 2,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-03T05:57:27.202Z",
    "end": "2020-05-03T05:57:27.449Z",
    "duration": 247,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7466717f-d087-4248-84a5-2a15ac3649f8",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "70e02531-5f02-4903-97e0-5a12afc35d8f",
          "title": "CARTS ENDPOINT UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/cart.js",
          "file": "/test/cart.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "CARTS ENDPOINT UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": \"nferocious76@gmail.com\",\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "d28a462c-018c-4652-a2b9-18c649dd0d4a",
              "parentUUID": "70e02531-5f02-4903-97e0-5a12afc35d8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /packages?limit=1 -- get a package to be added to cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /packages?limit=1 -- get a package to be added to cart",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/packages?limit=1')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n           if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            const item = items[0];\n            pkgId = item.id;\n            done();\n        });",
              "err": {},
              "uuid": "07504c80-526c-43a9-9f81-10240f97e9a3",
              "parentUUID": "70e02531-5f02-4903-97e0-5a12afc35d8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /cart -- add item to cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST POST /cart -- add item to cart",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/cart')\n        .set(headers)\n        .set(t(token))\n        .send({\n            \"package_id\": pkgId,\n            \"item_count\": 6\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "32c76dce-2509-4b0b-90b3-0e0f4bb19693",
              "parentUUID": "70e02531-5f02-4903-97e0-5a12afc35d8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /cart -- get cart items",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /cart -- get cart items",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/cart')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            expect(data).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "844d005e-f62e-4328-97d3-84f301c0e028",
              "parentUUID": "70e02531-5f02-4903-97e0-5a12afc35d8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /cart?limit=5 -- get cart items with limit",
              "fullTitle": "CARTS ENDPOINT UNIT TEST GET /cart?limit=5 -- get cart items with limit",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .get('/cart?limit=5')\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('item_count');\n            data.should.have.property('limit');\n            data.should.have.property('page');\n            data.should.have.property('items');\n            const items = data.items;\n            expect(items).to.have.lengthOf.above(0);\n            done();\n        });",
              "err": {},
              "uuid": "8b7dae04-7b91-4f65-bb8b-fc6296ab507e",
              "parentUUID": "70e02531-5f02-4903-97e0-5a12afc35d8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE /cart/:pkgId -- remove item from cart",
              "fullTitle": "CARTS ENDPOINT UNIT TEST DELETE /cart/:pkgId -- remove item from cart",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .delete(`/cart/${pkgId}`)\n        .set(headers)\n        .set(t(token))\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('id');\n            const deletedId = data.id;\n            expect(deletedId).to.equal(pkgId);\n            done();\n        });",
              "err": {},
              "uuid": "4c25b091-d85f-40cb-aa26-1b297470ad6c",
              "parentUUID": "70e02531-5f02-4903-97e0-5a12afc35d8f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d28a462c-018c-4652-a2b9-18c649dd0d4a",
            "07504c80-526c-43a9-9f81-10240f97e9a3",
            "32c76dce-2509-4b0b-90b3-0e0f4bb19693",
            "844d005e-f62e-4328-97d3-84f301c0e028",
            "8b7dae04-7b91-4f65-bb8b-fc6296ab507e",
            "4c25b091-d85f-40cb-aa26-1b297470ad6c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 103,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "acefd97f-07c8-4e46-b52b-2b22cadff638",
          "title": "USERS UNIT TEST",
          "fullFile": "/Users/nferocious/Documents/Projects/Past Time/FlightBookingSystem/test/user.js",
          "file": "/test/user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST /users/signup -- sign-up to create an account",
              "fullTitle": "USERS UNIT TEST POST /users/signup -- sign-up to create an account",
              "timedOut": false,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "email = `test.${h.randString(8)}@gmail.com`;\n        api\n        .post('/users/signup')\n        .set(headers)\n        .send({\n            \"role_id\": \"be72f6c2-8c47-11ea-b57f-acde48001122\",\n            \"email\": email,\n            \"password\": \"1234\",\n            \"first_name\": \"neil francis\",\n            \"last_name\": \"hipona\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('email');\n            done();\n        });",
              "err": {},
              "uuid": "c58dd773-8934-467b-ae9b-f1520156eeff",
              "parentUUID": "acefd97f-07c8-4e46-b52b-2b22cadff638",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users/signin -- sign-in and get user token",
              "fullTitle": "USERS UNIT TEST POST /users/signin -- sign-in and get user token",
              "timedOut": false,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signin')\n        .set(headers)\n        .send({\n            \"email\": email,\n            \"password\": \"1234\"\n        })\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            const data = res.body.data;\n            data.should.have.property('user');\n            data.should.have.property('token_data');\n            const token_data = data.token_data;\n            token = token_data.token;\n            done();\n        });",
              "err": {},
              "uuid": "ba58396a-3515-4075-a41b-dfdb543a5741",
              "parentUUID": "acefd97f-07c8-4e46-b52b-2b22cadff638",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users/signout -- logout and clear token",
              "fullTitle": "USERS UNIT TEST POST /users/signout -- logout and clear token",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api\n        .post('/users/signout')\n        .set(t(token))\n        .set(headers)\n        .send()\n        .expect(200)\n        .end((err, res) => {\n            if (err) return done(err);\n            expect(res.body.success).to.be.true;\n            done();\n        });",
              "err": {},
              "uuid": "2662295f-e748-4b5c-a682-f0215201da3c",
              "parentUUID": "acefd97f-07c8-4e46-b52b-2b22cadff638",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c58dd773-8934-467b-ae9b-f1520156eeff",
            "ba58396a-3515-4075-a41b-dfdb543a5741",
            "2662295f-e748-4b5c-a682-f0215201da3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 133,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.1.0"
    }
  }
}